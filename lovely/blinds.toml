[manifest]
version = "1.0.0"
dump_lua = true
priority = 2

## We should be able to delete this whole file whenever SMODS adds custom small/big blinds to their own API. But until then... lol

## Custom Small/Big Blinds
[[patches]]
[patches.pattern]
target = 'functions/common_events.lua'
pattern = '''G.GAME.round_resets.blind_choices.Boss = get_new_boss()'''
position = 'after'
match_indent = true
payload = '''
G.GAME.round_resets.blind_choices.Small = MINTY.get_blind("small") --Overwriting Ortalab's decision if it's present, sowwiez!
G.GAME.round_resets.blind_choices.Big = MINTY.get_blind("big")
'''

# Add Custom Small/Big Blinds
[[patches]]
[patches.pattern]
target = 'game.lua'
match_indent = true
position = 'after'
pattern = '''
self.GAME.round_resets.blind_choices.Boss = get_new_boss()
'''
payload = '''
self.GAME.round_resets.blind_choices.Small = MINTY.get_blind("small") --Overwriting Ortalab's decision (again) if it's present, sowwiez (again)!
self.GAME.round_resets.blind_choices.Big = MINTY.get_blind("big")
'''

# Handle defeating custom small/big blinds
[[patches]]
[patches.pattern]
target = 'functions/state_events.lua'
pattern = "G.GAME.round_resets.blind_states.Big = 'Defeated'"
position = 'after'
match_indent = true
payload = '''
elseif G.GAME.round_resets.blind.small then
    G.GAME.round_resets.blind_states.Small = 'Defeated'
elseif G.GAME.round_resets.blind.big then
    G.GAME.round_resets.blind_states.Big = 'Defeated' --Redundant if Ortalab is also present, but shouldn't do anything bad PROBABLY
'''
# Handle setting new blinds
[[patches]]
[patches.pattern]
target = 'blind.lua'
match_indent = true
position = 'after'
pattern = '''
self.boss = blind and not not blind.boss
'''
payload = '''
self.small = blind and not not blind.small
self.big = blind and not not blind.big --Redundant if Ortalab is also present, but shouldn't do anything bad PROBABLY
'''

[[patches]]
[patches.pattern]
target = 'blind.lua'
match_indent = true
position = 'at'
pattern = 'if self.name == "Small Blind" then'
payload = 'if self.name == "Small Blind" or self.small then'

[[patches]]
[patches.pattern]
target = 'blind.lua'
match_indent = true
position = 'at'
pattern = 'elseif self.name == "Big Blind" then'
payload = 'elseif self.name == "Big Blind" or self.big then'

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''if v.boss.showdown then '''
position = "at"
payload = '''if v.boss and v.boss.showdown then '''
match_indent = true