[manifest]
version = "1.0.0"
priority = 0

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "-- TARGET: adding to hand effects"
position = "after"
match_indent = true
payload = '''
-- WAUGH
MINTY.omegasplashing = false
    for i=1, #G.hand.cards do
        local splashed = false
        local unsplashed = SMODS.never_scores(G.hand.cards[i])
        local effects = {}
        SMODS.calculate_context({minty_omegasplash = true, other_card =  G.hand.cards[i], full_hand = G.play.cards, scoring_hand = scoring_hand, in_scoring = true}, effects)
        local flags = SMODS.trigger_effects(effects, G.hand.cards[i])
        if flags.add_to_hand then splashed = true end
    	if flags.remove_from_hand then unsplashed = true end
        if splashed and not unsplashed then
            MINTY.omegasplashing = true
            table.insert(final_scoring_hand, G.hand.cards[i])
        end
    end
'''

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''
for _, v in ipairs(SMODS.get_card_areas('playing_cards')) do
    SMODS.calculate_main_scoring({cardarea = v, full_hand = G.play.cards, scoring_hand = scoring_hand, scoring_name = text, poker_hands = poker_hands}, v == G.play and scoring_hand or nil)
    delay(0.3)
end
'''
position = "after"
match_indent = true
payload = '''
--WAUGH AGAIN
if MINTY.omegasplashing then
    MINTY.say("We Are Omegasplashing")
    MINTY.omegasplashing = nil
    for i=1,#G.hand.cards do
        if G.hand.cards[i].debuff then 
            G.GAME.blind.triggered = true
            G.E_MANAGER:add_event(Event({
                trigger = 'immediate',
                func = (function() SMODS.juice_up_blind();return true end)
            }))
            card_eval_status_text(G.hand.cards[i], 'debuff')
        else
            MINTY.say("Aw Yeah It Is A Cards")
            SMODS.score_card(G.hand.cards[i], {cardarea = G.play, full_hand = G.play.cards, scoring_hand = scoring_hand, scoring_name = text, poker_hands = poker_hands})
        end
        delay(0.2)
    end
    G.E_MANAGER:add_event(Event({
        trigger = 'after',
        func = (function()
            for i=1,#G.hand.cards do
                G.hand.cards[i]:highlight(false)
            end
            return true 
            end)
    }))
end
'''